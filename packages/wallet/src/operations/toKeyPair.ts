/*
 * Copyright 2020 - Transmute Industries Inc.
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *     http://www.apache.org/licenses/LICENSE-2.0
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import * as sidetreeCrypto from '@evan.network/sidetree-crypto';
import { UNIVERSAL_WALLET_CONTEXT_URL, placeHolderImage } from '../constants';

export const toKeyPair = async (
  mnemonic: string,
  type = 'Ed25519',
  hdPath: string
): Promise<any> => {
  const keypair: any = await sidetreeCrypto.toKeyPair(mnemonic, type, hdPath);
  const jsonWebKeyPair = await keypair.export({
    type: 'JsonWebKey2020',
    privateKey: true,
  });
  delete jsonWebKeyPair.publicKeyJwk.alg;
  delete jsonWebKeyPair.privateKeyJwk.alg;
  return {
    ...jsonWebKeyPair,
    '@context': [UNIVERSAL_WALLET_CONTEXT_URL],
    id: jsonWebKeyPair.id,
    name: 'Sidetree Key',
    image: placeHolderImage,
    description: 'Generated by @evan.network/sidetree-wallet.',
    // TODO: consider tag structure for linking back to mnemonic
    tags: [],
  };
};
